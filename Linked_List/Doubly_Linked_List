#include<iostream>

using namespace std;

class Node{
public:
    Node *prev;
    int data;
    Node *next;
}*first=NULL;

void create(int A[],int n){
    int i;
    Node *last,*t;
    first=new Node;
    first->data= A[0];
    first->prev=first->next=NULL;
    last=first;
    
    for(i=1;i<n;i++){
        t=new Node;
        t->data=A[i];
        t->next=last->next;
        t->prev=last;
        last->next=t;
        last=t;
    }
    
}

int length(Node *p){
    int len=0;
    while(p){
        len++;
        p=p->next;
    }
    return len;
}

void display(Node *p){
    while(p){
        cout<<p->data<<" ";
        p=p->next;
    }
}

void insert(Node *p,int index,int x){
    Node *t;
    int i;
    if(index<0 || index> length(first))
        return;
    if(index==0){
        t=new Node;
        t->data=x;
        t->prev=NULL;
        t->next=first;
        first->prev=t;
        first=t;
    }
    else{
        for(i=0;i<index-1;i++){
            p=p->next;
        }
        t=new Node;
        t->data=x;
        t->prev=p;
        t->next=p->next;
        if(p->next)
            p->next->prev=t;
        p->next=t;
    }
    
    
}

int Delete(Node *p,int index){
    int i,x;
    Node *q;
    if(index<0 || index >length(first))
        return -1;
    if(index==1){
        first=first->next;
        if(first)
            first->prev=NULL;
        x=p->data;
        delete p;
        
        }
        
    else{
        for(i=0;i<index-1;i++){
            p=p->next;
        }
        p->prev->next=p->next;
        if(p->next)
            p->next->prev=p->prev;
        x=p->data;
        delete p;
    }
    
    return x;
}


void reverse(Node *p){
    Node *temp;
    while(p!=NULL){
        temp=p->next;
        p->next=p->prev;
        p->prev=temp;
        p=p->prev;
        if(p!=NULL && p->next==NULL)
            first=p;
        
    }
}

int main(){
    
    int A[]= {10,20,30,40,50};
    create(A,5);
    
    display(first);
    cout<<endl;
    
//    insert(first,5,60);
//    display(first);
//    cout<<endl;
//    
//    Delete(first,6);
    
    reverse(first);
    display(first);
    cout<<endl;
    
//    int x=length(first);
//    cout<<"length: "<<x<<endl;
//    cout<<endl;
    
    return 0;
}
